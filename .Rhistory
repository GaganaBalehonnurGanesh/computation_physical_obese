label = "PATIENTS",
icon = icon("user"),
style = "success"),
bsButton("antimicrobials",
label = "ANTIMICROBIALS",
icon = icon("spinner", class = "spinner-box"),
style = "success"),
bsButton("diagnostics",
label = "DIAGNOSTICS",
icon = icon("flask", class = "flask-box"),
style = "success"),
bsButton("outcome",
label = "OUTCOME",
icon = icon("thumbs-o-up"),
style = "success"),
#data.step = 2, data.intro = intro$text[2])
)
),
)
)
ui <- dashboardPage(
skin = "black",
title = "Effects of Physical Activity",
dashboardHeader(title = HTML("Effects of Physical Activity"),
disable = FALSE,
titleWidth  = 300),
dashboardSidebar(
width = 250,
sidebarMenu(
id = 'sidebar',
style = "position: relative; overflow: visible;",
selectInput(
width = "100%",
inputId = "dbList1",
label = "Dropdown",
choices = c(choose = "Gender",
"Education", "Income", "Race"),
selectize = FALSE
),
br(),
br(),
sliderInput("slider", "Year:", 1, 100, 50),
br(),
br(),
actionButton(
inputId = "reset",
label = "Reset Data",
icon = icon("refresh")
)
)
),
dashboardBody(
tags$head(
tags$link(
rel = "stylesheet",
type = "text/css",
href = "finalproj.css")
),
#tabBox(
#title = NULL, width = 550,
# The id lets us use input$tabset1 on the server to find the current tab
#id = "tabset1", height = "750px",
#tabPanel("Physical activity VS Obesity", tabName = "dashboard", icon = icon("dashboard")),
#tabPanel("Overweight  by socio economic status", tabName = "Overweight  by socio economic status", icon = icon("globe")),
#tabPanel("Physical activity accross states in US", tabName = "Physical activity accross states in US", icon = icon("barcode")),
#tabPanel("Trends of Physical Activity & obesity", tabName = "Trends of Physical Activity & obesity", icon = icon("th"))
#),
fluidRow(
column(
width = 12,
introBox(
bsButton("patients",
label = "PATIENTS",
icon = icon("user"),
style = "success"),
bsButton("antimicrobials",
label = "ANTIMICROBIALS",
icon = icon("spinner", class = "spinner-box"),
style = "success"),
bsButton("diagnostics",
label = "DIAGNOSTICS",
icon = icon("flask", class = "flask-box"),
style = "success"),
bsButton("outcome",
label = "OUTCOME",
icon = icon("thumbs-o-up"),
style = "success"),
#data.step = 2, data.intro = intro$text[2])
)
)
)
)
)
ui <- dashboardPage(
skin = "black",
title = "Effects of Physical Activity",
dashboardHeader(title = HTML("Effects of Physical Activity"),
disable = FALSE,
titleWidth  = 300),
dashboardSidebar(
width = 250,
sidebarMenu(
id = 'sidebar',
style = "position: relative; overflow: visible;",
selectInput(
width = "100%",
inputId = "dbList1",
label = "Dropdown",
choices = c(choose = "Gender",
"Education", "Income", "Race"),
selectize = FALSE
),
br(),
br(),
sliderInput("slider", "Year:", 1, 100, 50),
br(),
br(),
actionButton(
inputId = "reset",
label = "Reset Data",
icon = icon("refresh")
)
)
),
dashboardBody(
tags$head(
tags$link(
rel = "stylesheet",
type = "text/css",
href = "finalproj.css")
),
#tabBox(
#title = NULL, width = 550,
# The id lets us use input$tabset1 on the server to find the current tab
#id = "tabset1", height = "750px",
#tabPanel("Physical activity VS Obesity", tabName = "dashboard", icon = icon("dashboard")),
#tabPanel("Overweight  by socio economic status", tabName = "Overweight  by socio economic status", icon = icon("globe")),
#tabPanel("Physical activity accross states in US", tabName = "Physical activity accross states in US", icon = icon("barcode")),
#tabPanel("Trends of Physical Activity & obesity", tabName = "Trends of Physical Activity & obesity", icon = icon("th"))
#),
fluidRow(
column(
width = 12,
bsButton("patients",
label = "PATIENTS",
icon = icon("user"),
style = "success"),
bsButton("antimicrobials",
label = "ANTIMICROBIALS",
icon = icon("spinner", class = "spinner-box"),
style = "success"),
bsButton("diagnostics",
label = "DIAGNOSTICS",
icon = icon("flask", class = "flask-box"),
style = "success"),
bsButton("outcome",
label = "OUTCOME",
icon = icon("thumbs-o-up"),
style = "success"),
#data.step = 2, data.intro = intro$text[2])
)
)
)
)
ui <- dashboardPage(
skin = "black",
title = "Effects of Physical Activity",
dashboardHeader(title = HTML("Effects of Physical Activity"),
disable = FALSE,
titleWidth  = 300),
dashboardSidebar(
width = 250,
sidebarMenu(
id = 'sidebar',
style = "position: relative; overflow: visible;",
selectInput(
width = "100%",
inputId = "dbList1",
label = "Dropdown",
choices = c(choose = "Gender",
"Education", "Income", "Race"),
selectize = FALSE
),
br(),
br(),
sliderInput("slider", "Year:", 1, 100, 50),
br(),
br(),
actionButton(
inputId = "reset",
label = "Reset Data",
icon = icon("refresh")
)
)
),
dashboardBody(
tags$head(
tags$link(
rel = "stylesheet",
type = "text/css",
href = "finalproj.css")
),
#tabBox(
#title = NULL, width = 550,
# The id lets us use input$tabset1 on the server to find the current tab
#id = "tabset1", height = "750px",
#tabPanel("Physical activity VS Obesity", tabName = "dashboard", icon = icon("dashboard")),
#tabPanel("Overweight  by socio economic status", tabName = "Overweight  by socio economic status", icon = icon("globe")),
#tabPanel("Physical activity accross states in US", tabName = "Physical activity accross states in US", icon = icon("barcode")),
#tabPanel("Trends of Physical Activity & obesity", tabName = "Trends of Physical Activity & obesity", icon = icon("th"))
#),
fluidRow(
column(
width = 12,
actionButton("patients",
label = "PATIENTS",
icon = icon("user"),
style = "success"),
actionButton("antimicrobials",
label = "ANTIMICROBIALS",
icon = icon("spinner", class = "spinner-box"),
style = "success"),
actionButton("diagnostics",
label = "DIAGNOSTICS",
icon = icon("flask", class = "flask-box"),
style = "success"),
actionButton("outcome",
label = "OUTCOME",
icon = icon("thumbs-o-up"),
style = "success"),
#data.step = 2, data.intro = intro$text[2])
)
)
)
)
ui <- dashboardPage(
skin = "black",
title = "Effects of Physical Activity",
dashboardHeader(title = HTML("Effects of Physical Activity"),
disable = FALSE,
titleWidth  = 300),
dashboardSidebar(
width = 250,
sidebarMenu(
id = 'sidebar',
style = "position: relative; overflow: visible;",
selectInput(
width = "100%",
inputId = "dbList1",
label = "Dropdown",
choices = c(choose = "Gender",
"Education", "Income", "Race"),
selectize = FALSE
),
br(),
br(),
sliderInput("slider", "Year:", 1, 100, 50),
br(),
br(),
actionButton(
inputId = "reset",
label = "Reset Data",
icon = icon("refresh")
)
)
),
dashboardBody(
tags$head(
tags$link(
rel = "stylesheet",
type = "text/css",
href = "finalproj.css")
),
#tabBox(
#title = NULL, width = 550,
# The id lets us use input$tabset1 on the server to find the current tab
#id = "tabset1", height = "750px",
#tabPanel("Physical activity VS Obesity", tabName = "dashboard", icon = icon("dashboard")),
#tabPanel("Overweight  by socio economic status", tabName = "Overweight  by socio economic status", icon = icon("globe")),
#tabPanel("Physical activity accross states in US", tabName = "Physical activity accross states in US", icon = icon("barcode")),
#tabPanel("Trends of Physical Activity & obesity", tabName = "Trends of Physical Activity & obesity", icon = icon("th"))
#),
fluidRow(
column(
width = 12,
actionButton("patients",
label = "PATIENTS",
icon = icon("user"),
style = "success"),
actionButton("antimicrobials",
label = "ANTIMICROBIALS",
icon = icon("spinner", class = "spinner-box"),
style = "success"),
actionButton("diagnostics",
label = "DIAGNOSTICS",
icon = icon("flask", class = "flask-box"),
style = "success"),
actionButton("outcome",
label = "OUTCOME",
icon = icon("thumbs-up"),
style = "success"),
#data.step = 2, data.intro = intro$text[2])
)
)
)
)
ui <- dashboardPage(
skin = "black",
title = "Effects of Physical Activity",
dashboardHeader(title = HTML("Effects of Physical Activity"),
disable = FALSE,
titleWidth  = 300),
dashboardSidebar(
width = 250,
sidebarMenu(
id = 'sidebar',
style = "position: relative; overflow: visible;",
selectInput(
width = "100%",
inputId = "dbList1",
label = "Dropdown",
choices = c(choose = "Gender",
"Education", "Income", "Race"),
selectize = FALSE
),
br(),
br(),
sliderInput("slider", "Year:", 1, 100, 50),
br(),
br(),
actionButton(
inputId = "reset",
label = "Reset Data",
icon = icon("refresh")
)
)
),
dashboardBody(
tags$head(
tags$link(
rel = "stylesheet",
type = "text/css",
href = "finalproj.css")
),
#tabBox(
#title = NULL, width = 550,
# The id lets us use input$tabset1 on the server to find the current tab
#id = "tabset1", height = "750px",
#tabPanel("Physical activity VS Obesity", tabName = "dashboard", icon = icon("dashboard")),
#tabPanel("Overweight  by socio economic status", tabName = "Overweight  by socio economic status", icon = icon("globe")),
#tabPanel("Physical activity accross states in US", tabName = "Physical activity accross states in US", icon = icon("barcode")),
#tabPanel("Trends of Physical Activity & obesity", tabName = "Trends of Physical Activity & obesity", icon = icon("th"))
#),
fluidRow(
column(
width = 12,
actionButton("patients",
label = "PATIENTS",
icon = icon("user")),
actionButton("antimicrobials",
label = "ANTIMICROBIALS",
icon = icon("spinner", class = "spinner-box"),
),
actionButton("diagnostics",
label = "DIAGNOSTICS",
icon = icon("flask", class = "flask-box"),
),
actionButton("outcome",
label = "OUTCOME",
icon = icon("thumbs-up"),
),
#data.step = 2, data.intro = intro$text[2])
)
)
)
)
ui <- dashboardPage(
skin = "black",
title = "Effects of Physical Activity",
dashboardHeader(title = HTML("Effects of Physical Activity"),
disable = FALSE,
titleWidth  = 300),
dashboardSidebar(
width = 250,
sidebarMenu(
id = 'sidebar',
style = "position: relative; overflow: visible;",
selectInput(
width = "100%",
inputId = "dbList1",
label = "Dropdown",
choices = c(choose = "Gender",
"Education", "Income", "Race"),
selectize = FALSE
),
br(),
br(),
sliderInput("slider", "Year:", 1, 100, 50),
br(),
br(),
actionButton(
inputId = "reset",
label = "Reset Data",
icon = icon("refresh")
)
)
),
dashboardBody(
tags$head(
tags$link(
rel = "stylesheet",
type = "text/css",
href = "finalproj.css")
),
tabBox(
title = NULL, width = 550,
#The id lets us use input$tabset1 on the server to find the current tab
id = "tabset1", height = "750px",
tabPanel("Physical activity VS Obesity", tabName = "dashboard", icon = icon("dashboard")),
tabPanel("Overweight  by socio economic status", tabName = "Overweight  by socio economic status", icon = icon("globe")),
tabPanel("Physical activity accross states in US", tabName = "Physical activity accross states in US", icon = icon("barcode")),
tabPanel("Trends of Physical Activity & obesity", tabName = "Trends of Physical Activity & obesity", icon = icon("th"))
),
)
)
ui <- dashboardPage(
dashboardHeader(title = HTML("Effects of Physical Activity"),
disable = FALSE,
titleWidth  = 300),
dashboardSidebar(
width = 250,
sidebarMenu(
id = 'sidebar',
style = "position: relative; overflow: visible;",
selectInput(
width = "100%",
inputId = "dbList1",
label = "Dropdown",
choices = c(choose = "Gender",
"Education", "Income", "Race"),
selectize = FALSE
),
sliderInput("slider", "Year:", 1, 100, 50),
actionButton(
inputId = "reset",
label = "Reset Data",
icon = icon("refresh")
)
)
),
dashboardBody(
tabBox(
title = NULL, width = 550,
# The id lets us use input$tabset1 on the server to find the current tab
id = "tabset1", height = "750px",
tabPanel("Physical activity VS Obesity", tabName = "dashboard", icon = icon("dashboard")),
tabPanel("Overweight  by socio economic status", tabName = "Overweight  by socio economic status", icon = icon("globe")),
tabPanel("Physical activity accross states in US", tabName = "Physical activity accross states in US", icon = icon("barcode")),
tabPanel("Trends of Physical Activity & obesity", tabName = "Trends of Physical Activity & obesity", icon = icon("th"))
),
)
)
shiny::runApp('Data_analytics/R data/computation_proj')
runApp('Data_analytics/R data/computation_proj')
runApp('Data_analytics/R data/computation_proj')
runApp('Data_analytics/R data/computation_proj')
runApp('Data_analytics/R data/computation_proj')
setwd("~/Data_analytics/R data/computation_proj")
runApp()
shiny::runApp('Data_analytics/R data/computation_proj')
runApp('Data_analytics/R data/computation_proj')
p2 <- df_Obesity %>%
filter(Question == "Percent of adults aged 18 years and older who have an overweight classification" & LocationDesc == "National") %>%
filter(!is.na(`Race/Ethnicity`) & !(`Race/Ethnicity` == "Data not reported")& YearStart == yearinput) %>%
ggplot(aes(x = `Race/Ethnicity`, y = Data_Value,color = `Race/Ethnicity`, fill = `Race/Ethnicity`)) +
theme_minimal() +
geom_point(size = 3) + geom_segment(aes(x= `Race/Ethnicity`,xend =`Race/Ethnicity`, y=0, yend = Data_Value)) +
theme(axis.text.x = element_text(angle=10))
runApp('Data_analytics/R data/computation_proj')
runApp('Data_analytics/R data/computation_proj')
runApp('Data_analytics/R data/computation_proj')
runApp('Data_analytics/R data/computation_proj')
runApp('Data_analytics/R data/computation_proj')
runApp('Data_analytics/R data/computation_proj')
runApp('Data_analytics/R data/computation_proj')
runApp('Data_analytics/R data/computation_proj')
runApp('Data_analytics/R data/computation_proj')
runApp('Data_analytics/R data/computation_proj')
runApp('Data_analytics/R data/computation_proj')
runApp('Data_analytics/R data/computation_proj')
runApp('Data_analytics/R data/computation_proj')
runApp('Data_analytics/R data/computation_proj')
runApp('Data_analytics/R data/computation_proj')
runApp('Data_analytics/R data/computation_proj')
runApp('Data_analytics/R data/computation_proj')
runApp('Data_analytics/R data/computation_proj')
runApp('Data_analytics/R data/computation_proj')
runApp('Data_analytics/R data/computation_proj')
runApp('Data_analytics/R data/computation_proj')
runApp('Data_analytics/R data/computation_proj')
runApp('Data_analytics/R data/computation_proj')
runApp('Data_analytics/R data/computation_proj')
runApp('Data_analytics/R data/computation_proj')
runApp('Data_analytics/R data/computation_proj')
runApp('Data_analytics/R data/computation_proj')
runApp('Data_analytics/R data/computation_proj')
runApp('Data_analytics/R data/computation_proj')
runApp('Data_analytics/R data/computation_proj')
runApp('Data_analytics/R data/computation_proj')
runApp('Data_analytics/R data/computation_proj')
runApp('Data_analytics/R data/computation_proj')
shiny::runApp()
